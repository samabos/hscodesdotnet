name: Deploy to VPS

on:
  pull_request:
    branches:
      - main # Deploy staging on PR to the main branch
  push:
    branches:
      - main # Deploy production on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image to DockerHub
        run: |
          docker buildx build --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/hscodes:${{ github.run_number }} \
            --file Autumn.UI/Dockerfile \
            --push .

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add VPS to known hosts
        run: ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            ENVIRONMENT="production"
          else
            ENVIRONMENT="staging"
          fi
          RUN_NUMBER=${{ github.run_number }}  # Get the GitHub Run Number
          echo "Deploying to $ENVIRONMENT environment..."

          ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }} "
          if [ '$ENVIRONMENT' == 'production' ]; then
            mkdir -p /root/hscodes &&
            cd /root/hscodes;
          else
            mkdir -p /root/hscodes-staging &&
            cd /root/hscodes-staging;
          fi &&
          if [ ! -d .git ]; then
            echo 'Directory is not a git repository. Cloning...';
            git clone https://github.com/samabos/hscodesdotnet.git .;
          fi;
            git reset --hard HEAD &&
            git pull &&
          if [ '$ENVIRONMENT' == 'production' ]; then
            export CONNECTION_STRING='${{ secrets.PROD_CONNECTION_STRING }}' &&
            export GITHUB_RUN_NUMBER=$RUN_NUMBER &&
            docker-compose -f ./docker-compose.prod.yml up -d --build;
          else
            export CONNECTION_STRING='${{ secrets.STAGING_CONNECTION_STRING }}' &&
            export GITHUB_RUN_NUMBER=$RUN_NUMBER &&
            docker-compose -f ./docker-compose.staging.yml up -d --build;
          fi
          "

